sudo: required
services:
  - docker
language: node_js
addons:
  - firefox: "45.0"
node_js:
  - 6
before_install:
  - echo $TRIGGER_REPO
  - echo $AUTHOR
  - echo $TRIGGER_VER
  - echo $CUC_TAG
  # Pull latest docker image from last step to test against before it gets updated by someone else
  # - docker pull matchbox/$TRIGGER_REPO
  # Set Ruby version
  - rvm use --install --default --binary ruby-2.3.1
  # Install dependencies, chrome & chromium, aws cli
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
  - sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
  - sudo apt-get update && sudo apt-get install -y google-chrome-stable awscli chromium-bsu
  # Install xvfb
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
before_script:
  - npm install -g protractor@3.3.0 grunt-cli
  - webdriver-manager update #--versions.chrome 2.24
  # Update Ruby cucumber dependencies
  - gem install bundler
  - bundle install
  # Update Node UI test dependencies
  - cd nci-match-ui-bddtests
  - npm install
  # - npm ls
  - cd ..
  # Version reporting
  - ruby -v
  - bundle --version
  - gem --version
  # Install xvfb
  # - "export DISPLAY=:99.0"
  # - "sh -e /etc/init.d/xvfb start"
  # - sleep 3 # give xvfb some time to start
  - cd DataSetup
  # Purge queues
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'ion_reporter_queue'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'ion_reporter_queue_dlx'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue_deadletter'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'treatment_arm_queue'"
  # Run Delete Script to empty DynamoDB before tests start
  - ruby -r "./match_test_data_manager.rb" -e "MatchTestDataManager.clear_all_int_tables"
  - ruby -r "./match_test_data_manager.rb" -e "MatchTestDataManager.upload_all_seed_data_to_int"
  - cd ..
  # Reset ECOG Mock service Data
  - curl -X POST "http://pedmatch-int.nci.nih.gov:3000/restart" -d ''

script:

  - export P1="_p1"
  - export P2="_p2"
  - export P3="_p3"
  # Run Cucumber @tag specific tests
  - ls -alt results
  - rm results/*
  - cd uMATCH/PedMATCH; bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t $CUC_TAG$P1,$CUC_TAG$P2 --format json --out ../../results/output-$CUC_TAG$P1-$TEST_ENV_NUMBER.json --expand' -n 2
  - cd ../..
#  - aws s3 cp results/ s3://bdd-test-data/report_test --region us-east-1 --recursive
  # Run Cucumber end to end tests
  # - bundle exec cucumber --tags @EndtoEnd
  # Install xvfb
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  # Run UI tests
  - cd nci-match-ui-bddtests/
#  - protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$PRIORITY --troubleshoot
  # Run protractor only if the tag is UI or demo
  - if [ "$CUC_TAG" = "@ui" -o "$CUC_TAG" = "@demo" ]; then protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$P1,$CUC_TAG$P2 --troubleshoot; fi
  # Temporarily run only p1 and p2 tags
#  - protractor config.js --cucumberOpts.tags="~@broken" --cucumberOpts.tags="@ui_p1,@ui_p2" --troubleshoot
  # Generate html report
  - for filename in ../results/*.json; do filesize=$(wc -c <"$filename"); if [ $filesize -le 0 ]; then echo $filename is 0 bytes, deleted it; rm $filename; fi; done
  - node support/generate_report.js
  - cd ..
  - ls -alt
  - mv results/ results_critical/; mkdir results
after_success:
  #Run P3 cucumber tests
  - cd uMATCH/PedMATCH; bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t $CUC_TAG$P3 --format json --out ../../results/output-$CUC_TAG$P3-$TEST_ENV_NUMBER.json --expand' -n 2

  #Run protractor tests
  - cd ../../nci-match-ui-bddtests/
  - if [ "$CUC_TAG" = "@ui" -o "$CUC_TAG" = "@demo" ]; then protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$P3 --troubleshoot; fi
  # Generate html report
  - for filename in ../results/*.json; do filesize=$(wc -c <"$filename"); if [ $filesize -le 0 ]; then echo $filename is 0 bytes, deleted it; rm $filename; fi; done
  - node support/generate_report.js
  - cd ..
  - ls -alt

  # Deploy to AWS UAT
  - |
    if [ "$TRIGGER_REPO" == "nci-match-ir-ecosystem-api" ]; then
      echo "Deploying both IR services to AWS UAT (place holder, the actual code will not be pushed)"
      #docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster PedMatch-UAT-Backend --service-name PedMatch-nci-match-ir-ecosystem-api-UAT -i matchbox/nci-match-ir-ecosystem-api:$TRIGGER_VER
      #docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster PedMatch-UAT-Backend --service-name PedMatch-nci-match-ir-ecosystem-processor-UAT -i matchbox/nci-match-ir-ecosystem-processor:$TRIGGER_VER
    else
      echo "Deploying to AWS UAT (place holder, the actual code will not be pushed)"
      #docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster PedMatch-UAT-Backend --service-name PedMatch-$TRIGGER_REPO-UAT -i matchbox/$TRIGGER_REPO:$TRIGGER_VER
    fi
  # Trigger Travis script #3, UAT Tests
  # - curl -s -X POST -H "Content-Type:application/json" -H "Accept:application/json" -H "Travis-API-Version:3" -H "Authorization:token $UAT_TRAVIS_TOKEN" -d "{\"request\":{\"message\":\"Triggered by $TRIGGER_REPO $TRAVIS_COMMIT\", \"branch\":\"master\", \"config\":{\"env\":{\"matrix\":[\"TRIGGER_REPO=$TRIGGER_REPO;CUC_TAG=$CUC_TAG\"]}}}}" https://api.travis-ci.org/repo/CBIIT%2Fnci-uMatch-uattests/requests

after_failure:
    #Notify $AUTHOR ------ NOT DONE YET
#    - cd TestManagement
#    - ruby -r "./bdd_notifier.rb" -e "BDDNotifier.new.notify_bdd_failure '$AUTHOR', '$TRIGGER_REPO', '$TRIGGER_VER', '$CUC_TAG', '$TRAVIS_JOB_ID'"
#    - cd ..

    #Run P3 cucumber tests
    - cd uMATCH/PedMATCH; bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t $CUC_TAG$P3 --format json --out ../../results/output-$TEST_ENV_NUMBER.json --expand' -n 2

    #Run protractor tests
    - cd ../../nci-match-ui-bddtests/
    - protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$P3 --troubleshoot
    # Generate html report
    - for filename in ../results/*.json; do filesize=$(wc -c <"$filename"); if [ $filesize -le 0 ]; then echo $filename is 0 bytes, deleted it; rm $filename; fi; done
    - node support/generate_report.js
after_script:
  #Set above, - export DATE=`TZ=America/New_York date "+%m-%d-%y-%H%M"`
  - export DATE_TRIM=`TZ=America/New_York date "+%m-%d-%y"`
  #Send result json to S3 for review
  ######COMMENTING FOR NOW###########################
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_BUILD_NUMBER/ --region us-east-1 --recursive
  ###################################################
  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results_critical/cucumber_report.html s3://cucumber-test-reports/$DATE_TRIM/critical$CUC_TAG.html --region us-east-1
  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results_critical/screenshot s3://cucumber-test-reports/$DATE_TRIM/screenshot --region us-east-1 --recursive

  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/cucumber_report.html s3://cucumber-test-reports/$DATE_TRIM/non-critical$CUC_TAG.html --region us-east-1
  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/screenshot s3://cucumber-test-reports/$DATE_TRIM/screenshot --region us-east-1 --recursive

  #- aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/result.json s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_BUILD_NUMBER/ --region us-east-1

  #purge queues
  - aws sqs purge-queue --queue-url https://sqs.us-east-1.amazonaws.com/127516845550/ion_reporter_queue
  - aws sqs purge-queue --queue-url https://sqs.us-east-1.amazonaws.com/127516845550/ion_reporter_queue_dlx
  - aws sqs purge-queue --queue-url https://sqs.us-east-1.amazonaws.com/127516845550/patient_queue
  - aws sqs purge-queue --queue-url https://sqs.us-east-1.amazonaws.com/127516845550/patient_queue_deadletter
  - aws sqs purge-queue --queue-url https://sqs.us-east-1.amazonaws.com/127516845550/treatment_arm_queue
######COMMENTING FOR NOW###########################
#  - export DATE=`TZ=America/New_York date "+%m-%d-%y-%H%M"`
#  - export TEST_REPORT='BDD Test Report'
#  - cd ~/build/CBIIT/nci-uMatch-bddtests/ResultsUpload
#  - ./update_google_drive.rb -d ~/build/CBIIT/nci-uMatch-bddtests/results/ -c config.json -t $CUC_TAG -b $TRAVIS_BUILD_NUMBER -f $TEST_REPORT
###################################################
  # - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/uMATCH/PedMATCH/results/output.json s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_COMMIT/ --region us-east-1
  # - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/nci-match-ui-bddtests/results/result.json s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_COMMIT/ --region us-east-1
  #update test report service
  - curl -X PUT "http://pedmatch-admin-alb-external-382939701.us-east-1.elb.amazonaws.com:3025/reports/update" -d ''
notifications:
  slack:
    rooms:
      - clinicalbiomed:gRp5LqKElNOjUUMPLlq4qC1j
    template:
      - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository}@%{branch} %{result} in %{duration} %{commit_message}"
