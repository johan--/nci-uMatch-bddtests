sudo: required
group: deprecated-2017Q2
services:
  - docker
language: node_js
addons:
  - firefox: "45.0"
node_js:
  - 6
before_install:
  - echo $TRIGGER_REPO
  - echo $AUTHOR
  - echo $TRIGGER_VER
  - echo $TRIGGER_DOCKER_IMAGE
  - echo $TRIGGER_COMMIT
  - echo $TRAVIS_COMMIT
  - echo $CUC_TAG
  - export CUC_TAG_TRIM=${CUC_TAG//@/}
  # check if $TRIGGER_DOCKER_IMAGE is same with the image in EC2 container, if it's not, quit this job
  - |
    if ! [ -z "$TRIGGER_DOCKER_IMAGE" ]; then
      export IMAGE_TO_CHECK=$TRIGGER_DOCKER_IMAGE:$TRIGGER_VER
      IMAGE_TO_CHECK=$(echo $IMAGE_TO_CHECK | sed 's#/#%2F#g')
      export RESPONSE=`curl -X GET "$TEST_MANAGEMENT_URL/docker_image_check/PedMatch-$TRIGGER_REPO-INTTEST/$IMAGE_TO_CHECK" -d ''`
      echo $RESPONSE
      if [[ $RESPONSE == *"doesn't"* ]]; then TRAVIS_TEST_RESULT=1; fi
    fi
  # Pull latest docker image from last step to test against before it gets updated by someone else
  # - docker pull matchbox/$TRIGGER_REPO
  # Set Ruby version
  - rvm use --install --default --binary ruby-2.3.1
  # Install dependencies, chrome & chromium, aws cli
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
  # - sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
  # deleted the following from below command chromium-bsu google-chrome-stable
  - sudo apt-get update && sudo apt-get install -y awscli
  # Install xvfb
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
before_script:
  - npm install -g protractor@3.3.0 grunt-cli
  - webdriver-manager update #--versions.chrome 2.24
  # Update Ruby cucumber dependencies
  - gem install bundler
  - bundle install

  - export ROOT_FOLDER=`pwd`
#  - export DATE_TRIM=`TZ=America/New_York date "+%m-%d-%y"`

  - cd TestManagement/bdd_reporter
  - npm install
  - cd ../..

  #check if $TRAVIS_COMMIT same age or older than current image (if it is newer, the whole bdd build should exit)
#  - cd TestManagement
#  - ruby -r "./bdd_image_checker.rb" -e "BDDImageChecker.check '$TRIGGER_REPO', '$TRIGGER_COMMIT'"
#  - cd ..

  # Update Node UI test dependencies only if it is a UI project
  - |
    if [ "$CUC_TAG" == "@admin_ui" ]; then
      cd nci-admin-ui-bddtests
      npm install
      cd ..
    fi
  # Anyway the nci-match-ui-bddtests need to be npm installed, because the cucumber report generator need it
  - cd nci-match-ui-bddtests
  - npm install
  - cd ..

  #remove the results folder placeholder
  - md results
#  - rm results/output.json

  # Version reporting
  - ruby -v
  - bundle --version
  - gem --version
  # Install xvfb
  # - "export DISPLAY=:99.0"
  # - "sh -e /etc/init.d/xvfb start"
  # - sleep 3 # give xvfb some time to start
  - cd DataSetup
  # Purge queues
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'treatment_arm_queue'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'pedmatch-int_ion_reporter_queue3'"
  # Run Delete Script to empty DynamoDB before tests start
  - cd pedmatch_test_data_manager
  - |
      if [ "$CUC_TAG" = "@demo" ]; then
        bundle exec ruby -r "./ped_match_database.rb" -e "PedMatchDatabase.reload_int 'patients'"
      else
        bundle exec ruby -r "./ped_match_database.rb" -e "PedMatchDatabase.reload_int '$CUC_TAG_TRIM'"
      fi
  - cd ..

#  - bundle exec ruby -r "./match_test_data_manager.rb" -e "MatchTestDataManager.clear_all_int_tables"
#  - bundle exec ruby -r "./match_test_data_manager.rb" -e "MatchTestDataManager.upload_all_seed_data_to_int"
#  - bundle exec ruby -r "./match_test_data_manager.rb" -e "MatchTestDataManager.upload_seed_data_to_int '$CUC_TAG_TRIM'"
  - cd ..
  # Reset ECOG Mock service Data
  - curl -X POST "http://pedmatch-int.nci.nih.gov:3000/restart" -d ''

script:

  - export P1="_p1"
  - export P2="_p2"
  - export P3="_p3"
  - export STATUS=0
  - export CURRENT_STATUS=0
  # Run Cucumber @tag specific tests
  - ls -alt results
  # Get status of run into CURRENT_STATUS. Update STATUS only if it is 0. So failures should be preserved across runs till the end
  - |
    if [ "$CUC_TAG" == "@demo" ]; then
      cd uMATCH/PedMATCH
      bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t @demo_p1 -f pretty --format json --out ../../results/output-$CUC_TAG$P1-$TEST_ENV_NUMBER.json --expand --color' -n 1
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
      mv ../../results/ ../../results_all/
      mkdir ../../results 
      cd ../..
    fi

  - |
    if [ "$CUC_TAG" == "@patients" ]; then
      cd uMATCH/PedMATCH
      touch cucumber_failures.log
      bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t @patients_queueless -f pretty --format json --out ../../results/output-$CUC_TAG_TRIM-queueless-$TEST_ENV_NUMBER.json --format ParallelTests::Cucumber::FailuresLogger --out cucumber_failures.log --expand --color' -n 8
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue'"
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'treatment_arm_queue'"
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'pedmatch-int_ion_reporter_queue3'"
      bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t @patients_need_queue -f pretty --format json --out ../../results/output-$CUC_TAG_TRIM-queue-$TEST_ENV_NUMBER.json --format ParallelTests::Cucumber::FailuresLogger --out cucumber_failures.log --expand --color' -n 2
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
      mv ../../results/ ../../results_all/
      mkdir ../../results
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue'"
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'treatment_arm_queue'"
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'pedmatch-int_ion_reporter_queue3'"
      ruby -r "../../DataSetup/pedmatch_test_data_manager/ped_match_database.rb" -e "PedMatchDatabase.reload_int '$CUC_TAG_TRIM'"
      cucumber -f pretty @cucumber_failures.log  --format json --out ../../results/rerun.json --expand
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'rerun', '$CUC_TAG', 'cucumber-test-reports'"
      cd ../..
    fi
  - echo "Status is $STATUS"

  - |
    if [ "$CUC_TAG" == "@ion_reporter_new" -o "$CUC_TAG" == "@treatment_arm" -o "$CUC_TAG" == "@rules" ]; then
      cd uMATCH/PedMATCH
      touch cucumber_failures.log
      bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t $CUC_TAG$P1,$CUC_TAG$P2 -f pretty --format json --out ../../results/output-$CUC_TAG$P1-$TEST_ENV_NUMBER.json --format ParallelTests::Cucumber::FailuresLogger --out cucumber_failures.log --expand --color' -n 2
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
      mv ../../results/ ../../results_all/
      mkdir ../../results
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue'"
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'treatment_arm_queue'"
      ruby -r "../../DataSetup/sqs_utilities.rb" -e "SQSUtilities.purge_queue 'pedmatch-int_ion_reporter_queue3'"
      ruby -r "../../DataSetup/pedmatch_test_data_manager/ped_match_database.rb" -e "PedMatchDatabase.reload_int '$CUC_TAG_TRIM'"
      cucumber -f pretty @cucumber_failures.log  --format json --out ../../results/rerun.json --expand
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'rerun', '$CUC_TAG', 'cucumber-test-reports'"
      cd ../..
    fi
  - echo "Status is $STATUS"

  - |
    if [ "$CUC_TAG" == "@ete" ]; then
      cd uMATCH/PedMATCH
      cucumber --tags @ete --format pretty --format json --out ../../results/output-ete.json --expand --color
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
      mv ../../results/ ../../results_all/
      mkdir ../../results 
      cd ../..
    fi

  - |
    if [ "$CUC_TAG" == "@admin_api" ]; then
      cd nci-admin-api-bddtests
      pwd
      cucumber --tags $CUC_TAG$P1,$CUC_TAG$P2 -c -x --format pretty --format json --out ../results/output-$CUC_TAG$P1-$TEST_ENV_NUMBER.json --expand
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
      mv ../../results/ ../../results_all/
      mkdir ../../results 
      cd ..
    fi
  - pwd
  - ls -altr results
#  - aws s3 cp results/ s3://bdd-test-data/report_test --region us-east-1 --recursive

  # Install xvfb
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  # Run UI tests only if the tag is UI, demo or @admin_ui
  # @ui and @demo should kick off match UI tests and @admin_ui should kick off admin_ui project.
  - |
    if [ "$CUC_TAG" == "@admin_ui" ]; then
      cd nci-admin-ui-bddtests/
      protractor conf.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags="$CUC_TAG$P1,$CUC_TAG$P2" --troubleshoot
      CURRENT_STATUS=$?
      if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
      ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
      mv ../../results/ ../../results_all/
      mkdir ../../results 
      cd ..
    else
      if [ "$CUC_TAG" == "@ui" -o "$CUC_TAG" == "@demo" ]; then
        cd nci-match-ui-bddtests/
        touch flake.txt
        protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$P1,$CUC_TAG$P2 --troubleshoot
        CURRENT_STATUS=$?
        if [ "$STATUS" == 0 ]; then STATUS=$CURRENT_STATUS; fi
        ruby -r "../../TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'critical', '$CUC_TAG', 'cucumber-test-reports'"
        mv ../../results/ ../../results_all/
        mkdir ../../results
        cd ..
      fi
    fi

  # Generate html report
  - export URL_TO_TRAVIS=https://travis-ci.org/CBIIT/nci-uMatch-bddtests/builds/"$TRAVIS_BUILD_ID"
  - ruby -r "./TestManagement/bdd_reporter.rb" -e "BddReporter.update_service 'ped-match', '$CUC_TAG', '$AUTHOR', '$TRIGGER_REPO', '$TRIGGER_COMMIT', '$URL_TO_TRAVIS'"
  - ruby -r "./TestManagement/bdd_reporter.rb" -e "BddReporter.notify_user 'ped-match', '$CUC_TAG'"
  - TRAVIS_TEST_RESULT=$STATUS
after_success:
  #Run P3 cucumber tests
#  - cd uMATCH/PedMATCH; bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t $CUC_TAG$P3 --format json --out ../../results/output-$CUC_TAG$P3-$TEST_ENV_NUMBER.json --expand' -n 2

  #Run protractor tests
#  - cd ../../nci-match-ui-bddtests/
#  - touch ../results/tmp.json
#  - if [ "$CUC_TAG" = "@ui" -o "$CUC_TAG" = "@demo" ]; then protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$P3 --troubleshoot; fi
#  # Generate html report
#  - for filename in ../results/*.json; do filesize=$(wc -c <"$filename"); if [ $filesize -le 0 ]; then echo $filename is 0 bytes, deleted it; rm $filename; fi; done
#  - node support/generate_report.js
#  - cd ..
#  - ls -alt
#  - export DATE_TRIM=`TZ=America/New_York date "+%m-%d-%y"`
#  - ruby DataSetup/html_converter.rb --file=cucumber_report.html --folder=results --date=$DATE_TRIM
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/cucumber_report.html s3://cucumber-test-reports/$DATE_TRIM/non-critical$CUC_TAG.html --region us-east-1
#  - |
#    if [ -d "~/build/CBIIT/nci-uMatch-bddtests/results/screenshot" ]; then
#      aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/screenshot s3://cucumber-test-reports/$DATE_TRIM/screenshot --region us-east-1 --recursive
#    fi
#  - curl -s -X PUT -H "Content-Type:application/json"
#    -d "{\"project\":\"ped-match\", \"date\":\"$DATE_TRIM\", \"tag\":\"$CUC_TAG_TRIM\", \"trigger_author\":\"$AUTHOR\", \"trigger_repo\":\"$TRIGGER_REPO\", \"trigger_commit\":\"$TRIGGER_COMMIT\", \"travis_url\":\"$URL_TO_TRAVIS\"}"
#    $TEST_MANAGEMENT_URL/reports/update

  - ruby -r "$ROOT_FOLDER/TestManagement/bdd_reporter.rb" -e "BddReporter.upload '$ROOT_FOLDER/results', 'non-critical', '$CUC_TAG', 'cucumber-test-reports'"
  - ruby -r "$ROOT_FOLDER/TestManagement/bdd_reporter.rb" -e "BddReporter.update_service 'ped-match', '$CUC_TAG', '$AUTHOR', '$TRIGGER_REPO', '$TRIGGER_COMMIT', '$URL_TO_TRAVIS'"
  # Deploy to AWS UAT
  - |
    if [ "$TRIGGER_REPO" == "nci-match-ir-ecosystem-api" ]; then
      echo "Deploying both IR services to AWS UAT for Ped & Adult"
      docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster PedMatch-UAT-Backend --service-name PedMatch-nci-match-ir-ecosystem-api-UAT -i fnlcr/nci-match-ir-ecosystem-api:$TRIGGER_VER --timeout 540 --max-definitions 25
      docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster PedMatch-UAT-Backend --service-name PedMatch-nci-match-ir-ecosystem-processor-UAT -i fnlcr/nci-match-ir-ecosystem-processor:$TRIGGER_VER --timeout 540 --max-definitions 25
      docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster AdultMatch-UAT-Backend --service-name AdultMATCH-nci-match-ir-ecosystem-api-UAT -i fnlcr/nci-match-ir-ecosystem-api:$TRIGGER_VER --timeout 540 --max-definitions 25
      docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster AdultMatch-UAT-Backend --service-name AdultMATCH-nci-match-ir-ecosystem-processor-UAT -i fnlcr/nci-match-ir-ecosystem-processor:$TRIGGER_VER --timeout 540 --max-definitions 25
    else
      echo "Deploying to AWS UAT"
      docker run -it --rm -e AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 silintl/ecs-deploy --cluster PedMatch-UAT-Backend --service-name PedMatch-$TRIGGER_REPO-UAT -i $TRIGGER_DOCKER_IMAGE:$TRIGGER_VER  --timeout 540 --max-definitions 25
      STATUS=$?
      if [ "$STATUS" == 0 ]; then
        curl -s -X PUT -H "Content-Type:application/json" -d "{\"project\":\"ctrp\", \"cuc_tag\":\"$CUC_TAG\", \"clear_tags\":\"true\", \"deployed_image\":\"fnlcr/$TRIGGER_REPO:$TRIGGER_VER\"}" $TEST_MANAGEMENT_URL/dynamic_tags_deploy
      else
        echo "PUSH UAT status is $STATUS"
        TRAVIS_TEST_RESULT=$STATUS
      fi
    fi
##  # Trigger Travis script #3, UAT Tests
  # - curl -s -X POST -H "Content-Type:application/json" -H "Accept:application/json" -H "Travis-API-Version:3" -H "Authorization:token $UAT_TRAVIS_TOKEN" -d "{\"request\":{\"message\":\"Triggered by $TRIGGER_REPO $TRAVIS_COMMIT\", \"branch\":\"master\", \"config\":{\"env\":{\"matrix\":[\"TRIGGER_REPO=$TRIGGER_REPO;CUC_TAG=$CUC_TAG\"]}}}}" https://api.travis-ci.org/repo/CBIIT%2Fnci-uMatch-uattests/requests

after_failure:

    #Run P3 cucumber tests
#    - cd uMATCH/PedMATCH; bundle exec parallel_cucumber features/ -o '-r features/step_definitions/ -r features/support/ -t $CUC_TAG$P3 --format json --out ../../results/output-$CUC_TAG$P3-$TEST_ENV_NUMBER.json --expand' -n 2

    #Run protractor tests
    - cd ../../nci-match-ui-bddtests/
    - protractor config.js --cucumberOpts.tags='~@broken' --cucumberOpts.tags=$CUC_TAG$P3 --troubleshoot
    # Generate html report
    - touch ../results/tmp.json
    - for filename in ../results/*.json; do filesize=$(wc -c <"$filename"); if [ $filesize -le 0 ]; then echo $filename is 0 bytes, deleted it; rm $filename; fi; done
    - node support/generate_report.js
    - cd ..
after_script:
  #Set above, - export DATE=`TZ=America/New_York date "+%m-%d-%y-%H%M"`
#  - export DATE_TRIM=`TZ=America/New_York date "+%m-%d-%y"`
  #Send result json to S3 for review
  ######COMMENTING FOR NOW###########################
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_BUILD_NUMBER/ --region us-east-1 --recursive
  ###################################################
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results_critical/cucumber_report.html s3://cucumber-test-reports/$DATE_TRIM/critical$CUC_TAG.html --region us-east-1
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results_critical/screenshot s3://cucumber-test-reports/$DATE_TRIM/screenshot --region us-east-1 --recursive
#
#  - ruby DataSetup/html_converter.rb --file=cucumber_report.html --folder=results --date=$DATE_TRIM
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/cucumber_report.html s3://cucumber-test-reports/$DATE_TRIM/non-critical$CUC_TAG.html --region us-east-1
#  - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/screenshot s3://cucumber-test-reports/$DATE_TRIM/screenshot --region us-east-1 --recursive

  #- aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/results/result.json s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_BUILD_NUMBER/ --region us-east-1

  # Purge queues
  - cd DataSetup
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'patient_queue'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'treatment_arm_queue'"
  - ruby -r "./sqs_utilities.rb" -e "SQSUtilities.purge_queue 'pedmatch-int_ion_reporter_queue3'"
  - cd ..
######COMMENTING FOR NOW###########################
#  - export DATE=`TZ=America/New_York date "+%m-%d-%y-%H%M"`
#  - export TEST_REPORT='BDD Test Report'
#  - cd ~/build/CBIIT/nci-uMatch-bddtests/ResultsUpload
#  - ./update_google_drive.rb -d ~/build/CBIIT/nci-uMatch-bddtests/results/ -c config.json -t $CUC_TAG -b $TRAVIS_BUILD_NUMBER -f $TEST_REPORT
###################################################
  # - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/uMATCH/PedMATCH/results/output.json s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_COMMIT/ --region us-east-1
  # - aws s3 cp ~/build/CBIIT/nci-uMatch-bddtests/nci-match-ui-bddtests/results/result.json s3://cucumbertest-reports/$TRIGGER_REPO/$DATE-$TRAVIS_COMMIT/ --region us-east-1
  #update test report service
notifications:
  slack:
    rooms:
      - clinicalbiomed:gRp5LqKElNOjUUMPLlq4qC1j
    template:
      - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository}@%{branch} %{result} in %{duration} %{commit_message}"
